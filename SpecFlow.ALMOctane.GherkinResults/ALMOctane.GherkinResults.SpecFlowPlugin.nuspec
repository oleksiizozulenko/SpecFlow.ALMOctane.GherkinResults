<?xml version="1.0"?>
<package xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <metadata xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
    <id>ALMOctane.GherkinResults.SpecFlowPlugin</id>
    <version>1.0.0</version>
    <title>SpecFlow ALMOctane cucumber results plugin</title>
    <authors>Oleksii Zozulenko</authors>
    <owners>Oleksii Zozulenko</owners>
    <description>An enhancement to Specflow DSL to be able to use dynamic test data in specflow steps by bringing in variables, regular expressions and simple calculations.
**Examples**:

- Create dynamic test data and refer it in another step

When enter [[var=50]] //assign 50 to a variable named "var"

Then [[var]] equals 50 // now get variable "var" value

- Create dynamic test data using regular expression

When enter [[var=RegEx([0-9]{3})]] //assign var with 3 digit random number

Then [[var]] is a 3 digits number // now get variable "var" value

- Calculations are currently NOT supported</description>
    <summary>An enhancement to Specflow DSL to be able to use dynamic test data in specflow steps by bringing in variables, regular expressions and simple calculations</summary>
    <releaseNotes>See GitHub project page, https://github.com/wenyuansong/SpecFlow.DSL#release-history</releaseNotes>
    <language>en-US</language>
    <projectUrl>https://github.com/wenyuansong/SpecFlow.DSL</projectUrl>
    <licenseUrl>https://raw.githubusercontent.com/wenyuansong/SpecFlow.DSL/master/LICENSE</licenseUrl>
    <iconUrl>http://go.specflow.org/specflow-nuget-icon</iconUrl>
    <copyright>Copyright Â© 2021 Oleksii Zozulenko, Microfocus Inc</copyright>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <tags>specflow alm-octane cucumber</tags>
    <dependencies>
      <group targetFramework="net45">
        <dependency id="SpecFlow" version="3.1"/>
        <dependency id="Fare" version="1.0.3" />
      </group>
      <group targetFramework="netstandard2.0">
        <dependency id="SpecFlow" version="3.1"/>
        <dependency id="Fare" version="1.0.3" />
      </group>
    </dependencies>
  </metadata>
  	<files>

    <file src="bin\$config$\netstandard2.0\ALMOctane.GherkinResults.SpecFlowPlugin.*" target="lib\netstandard2.0"/>
     </files>
</package>